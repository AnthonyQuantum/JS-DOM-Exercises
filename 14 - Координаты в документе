function getDocumentScroll() {
  var scrollHeight = Math.max(
    document.body.scrollHeight, document.documentElement.scrollHeight,
    document.body.offsetHeight, document.documentElement.offsetHeight,
    document.body.clientHeight, document.documentElement.clientHeight
  );
  return {
    top: pageYOffset,
    bottom: pageYOffset + document.documentElement.clientHeight,
    height: scrollHeight
  };
}



    /**
     * Позиционирует элемент elem относительно элемента anchor, как указано в
     * в position.
     *
     * @param {Node} anchor     Элемент-якорь, относительно которого задана позиция
     * @param {string} position Позиция: одно из (top/right/bottom)
     * @param {Node} elem       Элемент, который будет позиционирован
     *
     * Оба элемента elem && anchor должны быть видимы в документе.
     */
    function positionAt(anchor, position, elem) {

      var anchorCoords = anchor.getBoundingClientRect();

      switch (position) {
        case "top":
          elem.style.left = anchorCoords.left + "px";
          elem.style.top = anchorCoords.top + "px";
          break;

        case "right":
          elem.style.left = anchorCoords.left + anchor.offsetWidth + "px";
          elem.style.top = anchorCoords.top + "px";
          break;

        case "bottom":
          elem.style.left = anchorCoords.left + "px";
          elem.style.top = anchorCoords.top + anchor.offsetHeight + "px";
          break;
      }

    }

    /**
     * Показывает заметку с текстом html на позиции position
     * относительно элемента anchor
     */
    function showNote(anchor, position, html) {

      var note = document.createElement('div');
      note.className = "note";
      note.innerHTML = html;
      document.body.appendChild(note);

      positionAt(anchor, position, note);
    }

    // проверка работоспособности
    var blockquote = document.querySelector('blockquote');

    showNote(blockquote, "top", "заметка сверху");
    showNote(blockquote, "right", "заметка справа");
    showNote(blockquote, "bottom", "заметка снизу");



switch (position) {
        case "top-out":
          elem.style.left = anchorCoords.left + "px";
          elem.style.top = anchorCoords.top - elem.offsetHeight + "px";
          break;

        case "right-out":
          elem.style.left = anchorCoords.left + anchor.offsetWidth + "px";
          elem.style.top = anchorCoords.top + "px";
          break;
        case "bottom-out":
          elem.style.left = anchorCoords.left + "px";
          elem.style.top = anchorCoords.top + anchor.offsetHeight + "px";
          break;
        case "top-in":
          elem.style.left = anchorCoords.left + "px";
          elem.style.top = anchorCoords.top + "px";
          break;

        case "right-in":
          elem.style.left = anchorCoords.left + anchor.offsetWidth - elem.offsetWidth + "px";
          elem.style.top = anchorCoords.top + "px";
          break;

        case "bottom-in":
          elem.style.left = anchorCoords.left + "px";
          elem.style.top = anchorCoords.top + anchor.offsetHeight - elem.offsetHeight + "px";
          break;
      }
